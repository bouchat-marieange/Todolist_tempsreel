<!DOCTYPE html>

<html>

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <meta http-equiv="X-UA-Compatible" content="ie=edge">
  <title>Todolist en temps réel</title>
  <style>
    a {
      text-decoration: none;
      color: black;
    }
  </style>
</head>

<body>
  <div class="container">
    <h1>Ma todolist</h1>

    <ul id="taches">
      <!-- La zone de todolist (au départ elle est vide et ne contient aucunes tâches)-->
    </ul>

    <!-- Le formulaire permettant d'ajouter des tâches à la todolist -->
    <form action="/ajouter/" method="post" id="formulaire">
      <p>
        <label for="newtodo">Que dois-je faire ?</label>
        <!--Le label du formulaire-->
        <input type="text" name="newtodo" id="newtodo" autofocus />
        <!--Le champ du formulaire-->
        <input type="submit" value="Ajouter à la todolist" />
        <!--Le bouton envoyer du formulaire-->
      </p>
    </form>

    <!-- On inclus la bibliothèque JQuey -->
    <script src="http://code.jquery.com/jquery-1.10.1.min.js"></script>

    <!-- On fait récupérer au client le fichier socket.io.js qui permet de gérer la communication avec le serveur du côté client -->
    <script src="/socket.io/socket.io.js"></script>

    <script>
      // Connexion à socket.io qui permet d'effectuer des actions du côté du client pour communique avec le serveur
      var socket = io.connect('http://localhost:8080');

      // Reception de mise à jour de la todolist (Affichage de la liste mise à jour)
      socket.on('listeActuelle', function(todolistMiseAJour) {
        $('#taches').empty(); // On vide la todolist si elle contient déja quelque chose
        todolistMiseAJour.forEach(function(tache, index) { // tache (la valeur de l'élément du tableau en cours de traitement) - index (L'indice de l'élément du tableau en cours de traitement)
          $('#taches').prepend('<li><a href="#" data-index="' + index + '" class="suppression">✘</a> ' + tache + '</li>'); // On affiche dans la zone de todolist , sous forme de liste à puces (<li>) en insèrant le contenu au début de la sélection (prepend) la dernière tâche ajoutée est placée au dessus de la liste, tout d'abord un lien (<a>)se présentant sous la forme d'une croix et contenant l'index lié à la tache (ce qui permettra en cliquant sur la croix de supprimer la tache qui y est associée)
        });
      });

      // Quand l'utilisateur ajoute une tache avec le formulaire
      $('#formulaire').submit(function() {
        var nouvelleTache = $('#newtodo').val(); // On stocke la nouvelle tâche en JQuery dans la variable nouvelleTache
        socket.emit('ajout', nouvelleTache); // On transmet la nouvelle tâche aux autres utilisateurs connectés
        $('#newtodo').val('').focus(); // On vide la zone de texte du formulaire (#newtodo) et on remet le focus desssus
        return false; // Permet de bloquer l'envoi "classique" du formulaire
      });

      // Quand l'utilisateur supprime une tache en cliquant sur la croix en regard de celle-ci
      $('body').on('click', '.suppression', function() { // Lorsque l'utilisateur clique sur la croix
        socket.emit('suppression', $(this).data('index')); //On supprime la tâche en regard de celle-ci en fonction de son index
      });
    </script>

</body>

</html>
